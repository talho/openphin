#!/bin/sh
#
# TALHO backgroundrb init script
#
# chkconfig:   - 20 80
# description: Starts and stops the unicorn httpd daemon

### BEGIN INIT INFO
# Provides: searchd
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Should-Start: $remote_fs
# Should-Stop: $remote_fs
# Default-Start: 
# Default-Stop: 0 1 2 3 4 5 6
# Short-Description: start and stop backgroundrb daemon
# Description: TALHO backgroundrb init script
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

username="apache"
prog="backgroundrb"
exec="/var/www/.rvm/rubies/ree-1.8.7-2010.02/bin/ruby"
rundir="/var/www/openphin/current"
exec_cmd="$exec script/$prog"

lockfile=/var/lock/subsys/backgroundrb

start() {
    [ -x $exec ] || exit 5
    echo -n $"Starting $prog: "
    # if not running, start it up here, usually something like "daemon $exec"
    RAILS_ENV=production; export RAILS_ENV
    cd $rundir
    daemon --user=$username "$exec_cmd start >/dev/null 2>&1"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    # stop it here, often "killproc $prog"
    #killproc $prog
    cd $rundir
    daemon --user=$username "$exec_cmd stop >/dev/null"
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    #status $prog
    cd $rundir
    runuser $username -c "$exec_cmd status"
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
